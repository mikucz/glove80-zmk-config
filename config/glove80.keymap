/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED BY GLOVE80 LAYOUT EDITOR
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */
/* Include all behaviour includes needed by system behaviors/macros */
/* Include behaviour includes needed by key binds - automatically generated */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    /* Glove80 system behavior & macros */

    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        lower: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 1>;
        };

        bhm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        shm: shift_hr_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };
    };

    /* macros { */
    /*     bt_0: bt_profile_macro_0 { */
    /*         label = "BT_0"; */
    /*         compatible = "zmk,behavior-macro"; */
    /*         #binding-cells = <0>; */
    /*         bindings */
    /*             = <&out OUT_BLE>, */
    /*               <&bt BT_SEL 0>; */
    /*     }; */
    /* }; */
    /* macros { */
    /*     bt_1: bt_profile_macro_1 { */
    /*         label = "BT_1"; */
    /*         compatible = "zmk,behavior-macro"; */
    /*         #binding-cells = <0>; */
    /*         bindings */
    /*             = <&out OUT_BLE>, */
    /*               <&bt BT_SEL 1>; */
    /*     }; */
    /* }; */
    /* macros { */
    /*     bt_2: bt_profile_macro_2 { */
    /*         label = "BT_2"; */
    /*         compatible = "zmk,behavior-macro"; */
    /*         #binding-cells = <0>; */
    /*         bindings */
    /*             = <&out OUT_BLE>, */
    /*               <&bt BT_SEL 2>; */
    /*     }; */
    /* }; */
    /* macros { */
    /*     bt_3: bt_profile_macro_3 { */
    /*         label = "BT_3"; */
    /*         compatible = "zmk,behavior-macro"; */
    /*         #binding-cells = <0>; */
    /*         bindings */
    /*             = <&out OUT_BLE>, */
    /*               <&bt BT_SEL 3>; */
    /*     }; */
    /* }; */

    magic: magic_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "MAGIC_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&rgb_ug_status_macro>;
    };

    /* Custom Defined Behaviors */
    /* Automatically generated keymap */

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp F1          &kp F2       &kp F3            &kp F4             &kp F5                                                                                                     &kp F6               &kp F7             &kp F8            &kp F9              &kp F10
&kp GRAVE       &kp N1       &kp N2            &kp N3             &kp N4        &kp N5                                                                               &kp N6  &kp N7               &kp N8             &kp N9            &kp N0              &kp MINUS
&kp TAB         &kp Q        &kp W             &kp E              &kp R         &kp T                                                                                &kp Y   &kp U                &kp I              &kp O             &kp P               &kp BACKSLASH
&kp ESC         &bhm LGUI A  &bhm RIGHT_ALT S  &bhm LEFT_SHIFT D  &bhm LCTRL F  &kp G                                                                                &kp H   &bhm LEFT_CONTROL J  &bhm LEFT_SHIFT K  &bhm RIGHT_ALT L  &bhm LEFT_GUI SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z        &kp X             &kp C              &kp V         &kp B   &trans           &trans       &trans  &trans  &trans       &trans            &kp N   &kp M                &kp COMMA          &kp DOT           &kp FSLH            &kp PAGE_UP
&magic 2 0      &trans       &trans            &trans             &trans                &lt 1 BACKSPACE  &lt 1 SPACE  &trans  &trans  &lt 2 ENTER  &lt 2 UNDERSCORE          &trans               &trans             &trans            &trans              &kp PAGE_DOWN
            >;
        };

        layer_Lower {
            bindings = <
&trans     &trans    &trans          &trans                &trans                                                                                   &trans    &trans                 &trans           &none      &trans
&trans     &none     &none           &none                 &none             &trans                                                      &trans     &trans    &trans                 &trans           &trans     &trans
&kp TILDE  &kp EXCL  &kp AT          &kp HASH              &kp DLLR          &kp PRCNT                                                   &kp CARET  &kp AMPS  &kp ASTERISK           &kp LPAR         &kp RPAR   &trans
&kp GRAVE  &kp N1    &kp N2          &kp N3                &kp N4            &kp N5                                                      &kp N6     &kp N7    &kp N8                 &kp N9           &kp N0     &trans
&trans     &kp PLUS  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp UNDER  &trans   &trans  &trans  &trans  &trans  &trans  &kp EQUAL  &kp RBKT  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp MINUS  &trans
&trans     &trans    &trans          &trans                &trans                       &kp DEL  &trans  &trans  &trans  &trans  &trans             &trans    &trans                 &trans           &trans     &trans
            >;
        };

        layer_Magic {
            bindings = <
&rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                                             &none            &none   &none      &bt BT_CLR  &bt BT_CLR_ALL
&bootloader      &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                  &none     &none            &none   &none      &none       &none
&kp F12          &kp F1           &kp F2           &kp F3           &kp F4           &kp F5                                                           &kp F6    &kp F7           &kp F8  &kp F9     &kp F10     &kp F11
&trans           &kp C_PREV       &kp C_NEXT       &kp C_VOL_DN     &kp C_VOL_UP     &kp C_PP                                                         &kp LEFT  &kp DOWN         &kp UP  &kp RIGHT  &trans      &trans
&trans           &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &trans           &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp PRINTSCREEN  &trans  &trans     &trans      &trans
&trans           &trans           &trans           &trans           &trans                            &trans  &trans  &trans  &trans  &trans  &trans            &trans           &trans  &trans     &trans      &trans
            >;
        };
    };
};
